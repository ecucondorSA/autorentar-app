name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        default: 'production'
        options:
          - production
          - staging

jobs:
  deploy-production:
    name: Deploy to ${{ github.event.inputs.environment || 'production' }}
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'production' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm run test:ci
      
      - name: Build production
        run: npm run build
        env:
          NODE_ENV: production
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
      
      - name: Create deployment archive
        run: |
          tar -czf dist.tar.gz dist/
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: production-build
          path: dist.tar.gz
          retention-days: 7
      
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: dist/autorentar-app/browser
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.inputs.environment || 'production' }}
      
      - name: Deploy notification
        if: success()
        run: |
          echo "‚úÖ Deployment successful to ${{ github.event.inputs.environment || 'production' }}"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Deployed to Cloudflare Pages"

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: deploy-production
    if: success()
    
    steps:
      - name: Deployment success notification
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Deployed by: ${{ github.actor }}"

  notify-failure:
    name: Notify Failure
    runs-on: ubuntu-latest
    needs: deploy-production
    if: failure()
    
    steps:
      - name: Deployment failure notification
        run: |
          echo "‚ùå Deployment failed!"
          echo "Environment: ${{ github.event.inputs.environment || 'production' }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Please check the logs for more details."
